/*
 * Queenbee Recipe Schema
 *
 * Documentation for Queenbee recipe schema.
 *
 * The version of the OpenAPI document: 1.6.6
 * Contact: info@ladybug.tools
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using QueenbeeSDK.Api;
using QueenbeeSDK.Model;
using QueenbeeSDK.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace QueenbeeSDK.Test
{
    /// <summary>
    ///  Class for testing PathOutput
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class PathOutputTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for PathOutput
        //private PathOutput instance;

        public PathOutputTests()
        {
            // TODO uncomment below to create an instance of PathOutput
            //instance = new PathOutput();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of PathOutput
        /// </summary>
        [Fact]
        public void PathOutputInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" PathOutput
            //Assert.IsInstanceOfType<PathOutput> (instance, "variable 'instance' is a PathOutput");
        }

        /// <summary>
        /// Test deserialize a TaskPathReturn from type PathOutput
        /// </summary>
        [Fact]
        public void TaskPathReturnDeserializeFromPathOutputTest()
        {
            // TODO uncomment below to test deserialize a TaskPathReturn from type PathOutput
            //Assert.IsInstanceOf<PathOutput>(JsonConvert.DeserializeObject<PathOutput>(new TaskPathReturn().ToJson()));
        }

        /// <summary>
        /// Test the property 'Path'
        /// </summary>
        [Fact]
        public void PathTest()
        {
            // TODO unit test for the property 'Path'
        }
        /// <summary>
        /// Test the property 'Type'
        /// </summary>
        [Fact]
        public void TypeTest()
        {
            // TODO unit test for the property 'Type'
        }

    }

}
