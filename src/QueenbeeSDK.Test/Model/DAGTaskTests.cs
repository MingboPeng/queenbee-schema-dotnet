/*
 * Queenbee Recipe Schema
 *
 * Documentation for Queenbee recipe schema.
 *
 * The version of the OpenAPI document: 1.6.6
 * Contact: info@ladybug.tools
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using QueenbeeSDK.Api;
using QueenbeeSDK.Model;
using QueenbeeSDK.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace QueenbeeSDK.Test
{
    /// <summary>
    ///  Class for testing DAGTask
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class DAGTaskTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for DAGTask
        //private DAGTask instance;

        public DAGTaskTests()
        {
            // TODO uncomment below to create an instance of DAGTask
            //instance = new DAGTask();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of DAGTask
        /// </summary>
        [Fact]
        public void DAGTaskInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" DAGTask
            //Assert.IsInstanceOfType<DAGTask> (instance, "variable 'instance' is a DAGTask");
        }


        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'Template'
        /// </summary>
        [Fact]
        public void TemplateTest()
        {
            // TODO unit test for the property 'Template'
        }
        /// <summary>
        /// Test the property 'Annotations'
        /// </summary>
        [Fact]
        public void AnnotationsTest()
        {
            // TODO unit test for the property 'Annotations'
        }
        /// <summary>
        /// Test the property 'Arguments'
        /// </summary>
        [Fact]
        public void ArgumentsTest()
        {
            // TODO unit test for the property 'Arguments'
        }
        /// <summary>
        /// Test the property 'Needs'
        /// </summary>
        [Fact]
        public void NeedsTest()
        {
            // TODO unit test for the property 'Needs'
        }
        /// <summary>
        /// Test the property 'Loop'
        /// </summary>
        [Fact]
        public void LoopTest()
        {
            // TODO unit test for the property 'Loop'
        }
        /// <summary>
        /// Test the property 'SubFolder'
        /// </summary>
        [Fact]
        public void SubFolderTest()
        {
            // TODO unit test for the property 'SubFolder'
        }
        /// <summary>
        /// Test the property 'Returns'
        /// </summary>
        [Fact]
        public void ReturnsTest()
        {
            // TODO unit test for the property 'Returns'
        }
        /// <summary>
        /// Test the property 'Type'
        /// </summary>
        [Fact]
        public void TypeTest()
        {
            // TODO unit test for the property 'Type'
        }

    }

}
